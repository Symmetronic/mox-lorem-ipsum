/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface MoxLoremIpsum {
      /**
       * The number of paragraphs to create.
       */
      'count': number;
    }
  }


    interface HTMLMoxLoremIpsumElement extends StencilComponents.MoxLoremIpsum, HTMLStencilElement {}

    var HTMLMoxLoremIpsumElement: {
      prototype: HTMLMoxLoremIpsumElement;
      new (): HTMLMoxLoremIpsumElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'mox-lorem-ipsum': JSXElements.MoxLoremIpsumAttributes;
    }
  }

  namespace JSXElements {

    export interface MoxLoremIpsumAttributes extends HTMLAttributes {
      /**
       * The number of paragraphs to create.
       */
      'count'?: number;
    }
  }

  interface HTMLElementTagNameMap {
    'mox-lorem-ipsum': HTMLMoxLoremIpsumElement
  }

  interface ElementTagNameMap {
    'mox-lorem-ipsum': HTMLMoxLoremIpsumElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;